{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Escritorio/programacion/react/Proyectos_Udemy_React/mern/cliente/src/context/proyectos/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO } from '../../types';\n\nconst ProyectoState = props => {\n  const proyectos = [{\n    id: 1,\n    nombre: 'Tienda virtual'\n  }, {\n    id: 2,\n    nombre: 'Intranet'\n  }, {\n    id: 3,\n    nombre: 'Diseño de Sitio web'\n  }, {\n    id: 4,\n    nombre: 'MERN'\n  }];\n  const initialState = {\n    proyectos: [],\n    formulario: false\n  }; // dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //serie de funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //obtener los proyectos\n\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectos\n    });\n  }; //agregar nuevo proyecto\n\n\n  const agregarProyecto = proyecto => {\n    proyecto.id = uuid.v4(); //\n  };\n\n  return React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/home/lucas/Escritorio/programacion/react/Proyectos_Udemy_React/mern/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","uuid","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","ProyectoState","props","proyectos","id","nombre","initialState","formulario","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","proyecto","v4","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SAASC,mBAAT,EAA8BC,iBAA9B,EAAiDC,gBAAjD,QAAyE,aAAzE;;AAKA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE3B,QAAMC,SAAS,GAAG,CACd;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GADc,EAEd;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GAFc,EAGd;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GAHc,EAId;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GAJc,CAAlB;AAOA,QAAMC,YAAY,GAAG;AAEjBH,IAAAA,SAAS,EAAG,EAFK;AAGjBI,IAAAA,UAAU,EAAG;AAHI,GAArB,CAT2B,CAe3B;;AACA,QAAM,CAAEC,KAAF,EAAUC,QAAV,IAAuBf,UAAU,CAACG,eAAD,EAAkBS,YAAlB,CAAvC,CAhB2B,CAkB3B;;AACA,QAAMI,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAJD,CAnB2B,CAyB3B;;;AACA,QAAMc,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ,iBADD;AAELc,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GALD,CA1B2B,CAiC3B;;;AACA,QAAMW,eAAe,GAAGC,QAAQ,IAAI;AAChCA,IAAAA,QAAQ,CAACX,EAAT,GAAcT,IAAI,CAACqB,EAAL,EAAd,CADgC,CAGhC;AACH,GAJD;;AAMA,SACI,oBAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AACHb,MAAAA,SAAS,EAAEK,KAAK,CAACL,SADd;AAEHI,MAAAA,UAAU,EAAEC,KAAK,CAACD,UAFf;AAGHG,MAAAA,iBAHG;AAIHE,MAAAA,gBAJG;AAKHE,MAAAA;AALG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKZ,KAAK,CAACe,QATX,CADJ;AAaH,CArDD;;AAuDA,eAAehB,aAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nimport uuid from 'uuid';\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\n\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO } from '../../types';\n\n\n\n\nconst ProyectoState = props => {\n\n    const proyectos = [\n        {id:1 ,nombre: 'Tienda virtual'},\n        {id:2 ,nombre: 'Intranet'},\n        {id:3 ,nombre: 'Diseño de Sitio web'},\n        {id:4 ,nombre: 'MERN'}\n    ]\n\n    const initialState = {\n\n        proyectos : [],\n        formulario : false\n    }\n\n    // dispatch para ejecutar las acciones\n    const [ state , dispatch ] = useReducer(proyectoReducer, initialState)\n\n    //serie de funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    //obtener los proyectos\n    const obtenerProyectos = () => {\n        dispatch({\n            type: OBTENER_PROYECTOS,\n            payload: proyectos\n        })\n    }\n\n    //agregar nuevo proyecto\n    const agregarProyecto = proyecto => {\n        proyecto.id = uuid.v4();\n\n        //\n    }\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n}\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}