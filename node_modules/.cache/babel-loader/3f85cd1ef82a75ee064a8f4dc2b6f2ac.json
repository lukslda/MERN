{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Escritorio/programacion/react/Proyectos_Udemy_React/mern/cliente/src/context/proyectos/proyectoState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL } from '../../types';\n\nconst ProyectoState = props => {\n  const proyectos = [{\n    id: 1,\n    nombre: 'Tienda virtual'\n  }, {\n    id: 2,\n    nombre: 'Intranet'\n  }, {\n    id: 3,\n    nombre: 'Diseño de Sitio web'\n  }, {\n    id: 4,\n    nombre: 'MERN'\n  }];\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorformulario: false,\n    proyecto: null\n  }; // dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //serie de funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; //obtener los proyectos\n\n\n  const obtenerProyectos = () => {\n    dispatch({\n      type: OBTENER_PROYECTOS,\n      payload: proyectos\n    });\n  }; //agregar nuevo proyecto\n\n\n  const agregarProyecto = proyecto => {\n    proyecto.id = uuid.v4(); //insertar el proyecto en el state\n\n    dispatch({\n      type: AGREGAR_PROYECTO,\n      payload: proyecto\n    });\n  }; //Validar el formulario por errores\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; //selecciona el proyecto que el usuario dio click\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyecto\n    });\n  };\n\n  return React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/home/lucas/Escritorio/programacion/react/Proyectos_Udemy_React/mern/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","uuid","proyectoContext","proyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ProyectoState","props","proyectos","id","nombre","initialState","formulario","errorformulario","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","payload","agregarProyecto","v4","mostrarError","proyectoActual","proyectoId","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SACIC,mBADJ,EAEIC,iBAFJ,EAGIC,gBAHJ,EAIIC,kBAJJ,EAKIC,eALJ,QAMO,aANP;;AAWA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE3B,QAAMC,SAAS,GAAG,CACd;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GADc,EAEd;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GAFc,EAGd;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GAHc,EAId;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,MAAM,EAAE;AAAf,GAJc,CAAlB;AAOA,QAAMC,YAAY,GAAG;AAEjBH,IAAAA,SAAS,EAAG,EAFK;AAGjBI,IAAAA,UAAU,EAAG,KAHI;AAIjBC,IAAAA,eAAe,EAAE,KAJA;AAKjBC,IAAAA,QAAQ,EAAE;AALO,GAArB,CAT2B,CAiB3B;;AACA,QAAM,CAAEC,KAAF,EAAUC,QAAV,IAAuBnB,UAAU,CAACG,eAAD,EAAkBW,YAAlB,CAAvC,CAlB2B,CAoB3B;;AACA,QAAMM,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEjB;AADD,KAAD,CAAR;AAGH,GAJD,CArB2B,CA2B3B;;;AACA,QAAMkB,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEhB,iBADD;AAELkB,MAAAA,OAAO,EAAEZ;AAFJ,KAAD,CAAR;AAIH,GALD,CA5B2B,CAmC3B;;;AACA,QAAMa,eAAe,GAAGP,QAAQ,IAAI;AAChCA,IAAAA,QAAQ,CAACL,EAAT,GAAcX,IAAI,CAACwB,EAAL,EAAd,CADgC,CAGhC;;AACAN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,gBADD;AAELiB,MAAAA,OAAO,EAAEN;AAFJ,KAAD,CAAR;AAIH,GARD,CApC2B,CA8C3B;;;AACA,QAAMS,YAAY,GAAG,MAAM;AACvBP,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH,GAJD,CA/C2B,CAsD3B;;;AACA,QAAMoB,cAAc,GAAGC,UAAU,IAAI;AACjCT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb,eADD;AAELe,MAAAA,OAAO,EAAEN;AAFJ,KAAD,CAAR;AAIH,GALD;;AASA,SACI,oBAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AACHN,MAAAA,SAAS,EAAEO,KAAK,CAACP,SADd;AAEHI,MAAAA,UAAU,EAAEG,KAAK,CAACH,UAFf;AAGHC,MAAAA,eAAe,EAAGE,KAAK,CAACF,eAHrB;AAIHC,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAJb;AAKHG,MAAAA,iBALG;AAMHE,MAAAA,gBANG;AAOHE,MAAAA,eAPG;AAQHE,MAAAA,YARG;AASHC,MAAAA;AATG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcKjB,KAAK,CAACmB,QAdX,CADJ;AAkBH,CAlFD;;AAoFA,eAAepB,aAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nimport uuid from 'uuid';\n\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\n\nimport { \n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS, \n    AGREGAR_PROYECTO, \n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL \n} from '../../types';\n\n\n\n\nconst ProyectoState = props => {\n\n    const proyectos = [\n        {id:1 ,nombre: 'Tienda virtual'},\n        {id:2 ,nombre: 'Intranet'},\n        {id:3 ,nombre: 'Diseño de Sitio web'},\n        {id:4 ,nombre: 'MERN'}\n    ]\n\n    const initialState = {\n\n        proyectos : [],\n        formulario : false,\n        errorformulario: false,\n        proyecto: null\n    }\n\n    // dispatch para ejecutar las acciones\n    const [ state , dispatch ] = useReducer(proyectoReducer, initialState)\n\n    //serie de funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    //obtener los proyectos\n    const obtenerProyectos = () => {\n        dispatch({\n            type: OBTENER_PROYECTOS,\n            payload: proyectos\n        })\n    }\n\n    //agregar nuevo proyecto\n    const agregarProyecto = proyecto => {\n        proyecto.id = uuid.v4();\n\n        //insertar el proyecto en el state\n        dispatch({\n            type: AGREGAR_PROYECTO,\n            payload: proyecto\n        })\n    }\n\n    //Validar el formulario por errores\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n\n    //selecciona el proyecto que el usuario dio click\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyecto\n        })\n    }\n \n\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario : state.errorformulario,\n                proyecto: state.proyecto,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual \n                \n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n}\n\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}